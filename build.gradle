plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java-library'
    id 'maven-publish'
    id 'signing'

}
group = 'com.ipisces42'
version = '0.0.1'
sourceCompatibility = '8'

repositories {
    mavenCentral()
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.6'
}

tasks.named('test') {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.addStringOption("charset", "UTF-8")
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'idempotent-spring-boot-starter'
            from components.java
            pom {
                name = 'idempotent-spring-boot-starter'
                description = '一个幂等性的starter'
                url = 'https://github.com/iPisces77/idempotent-spring-boot-starter'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'iPisces42'
                        email = 'fuhaixin77@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git@github.com:iPisces77/idempotent-spring-boot-starter.git'
                    developerConnection = 'scm:git:git@github.com:iPisces77/idempotent-spring-boot-starter.git'
                    url = 'https://github.com/iPisces77/idempotent-spring-boot-starter'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            } else {
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    sign(publishing.publications.mavenJava)
}

